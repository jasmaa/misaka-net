syntax = "proto3";

package grpc;

option go_package = "github.com/jasmaa/misaka-net/internal/grpc";

service Master {
  rpc GetInput(InputValueRequest) returns (ValueReply) {}
  rpc SendOutput(OutputValueRequest) returns (CommandReply) {}
}

service Program {
  rpc Run(RunRequest) returns (CommandReply) {}
  rpc Pause(PauseRequest) returns (CommandReply) {}
  rpc Reset(ResetRequest) returns (CommandReply) {}
  rpc Load(LoadRequest) returns (CommandReply) {}
  rpc SendValue(SendValueRequest) returns (CommandReply) {}
}

service Stack {
  rpc Run(RunRequest) returns (CommandReply) {}
  rpc Reset(ResetRequest) returns (CommandReply) {}
  rpc Push(PushValueRequest) returns (CommandReply) {}
  rpc Pop(PopValueRequest) returns (ValueReply) {}
}

message RunRequest {}

message PauseRequest {}

message ResetRequest {}

message LoadRequest {
  string program = 1;
}

message SendValueRequest {
  sint32 value = 1;
  int32 register = 2;
}

message GetValueRequest {}

message PushValueRequest {
  sint32 value = 1;
}

message PopValueRequest {}

message OutputValueRequest {
  sint32 value = 1;
}

message InputValueRequest {}

message CommandReply {}

message ValueReply {
  sint32 value = 1;
}